name: Run lighthouse CI When Push
on: [push]
jobs:
  lighthouse-ci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - name: github checkout
        uses: actions/checkout@v2

      - name: Node js v16.15.1
        uses: actions/setup-node@v1
        with:
          node-version: 16.15.1

      - name: ======== YANR INSTALL üß∞ ========
        run: |
          npm i -g yarn && 
          yarn install --frozen-lockfile

      - name: ======== YANR BUILD üîß ========
        run: |
          yarn build

      - name: Run Lighthouse CI
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          yarn global add @lhci/cli
          lhci autorun || echo "Fail to Run Lighthouse CI!"

      - name: lighthouse Ï†êÏàò
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            
            const results = JSON.parse(fs.readFileSync("./lhci_reports/manifest.json"));
            
            let comments = "";
            
            results.forEach((result) => {
            const { summary, jsonPath } = result;
            
            const details = JSON.parse(fs.readFileSync(jsonPath));
            
            const { audits } = details;
            
            const formatResult = (res) => Math.round(res * 100);
            
            
            Object.keys(summary).forEach((key) => (summary[key] = formatResult(summary[key])));
            
            const score = (res) => (res >= 90 ? "üü¢" : res >= 50 ? "üü†" : "üî¥");
            
            const comment = [
            `‚ö°Ô∏è Lighthouse report!`,
            `| Category | Score |`,
            `| --- | --- |`,
            `| ${score(summary.performance)} Performance | ${summary.performance} |`,
            `| ${score(summary.accessibility)} Accessibility | ${summary.accessibility} |`,
            `| ${score(summary['best-practices'])} Best practices | ${summary['best-practices']} |`,
            `| ${score(summary.seo)} SEO | ${summary.seo} |`,
            `| ${score(summary.pwa)} PWA | ${summary.pwa} |`,
            ].join("\n");
            
            const detail = [
            `| Category | Score |`,
            `| --- | --- |`,
            `| ${score(audits["first-contentful-paint"].score * 100)} First Contentful Paint | ${audits["first-contentful-paint"].displayValue} |`,
            `| ${score(audits["first-contentful-paint"].score * 100)} First Contentful Paint | ${audits["first-contentful-paint"].displayValue} |`,
            `| ${score(audits["first-contentful-paint"].score * 100)} First Contentful Paint | ${audits["first-contentful-paint"].displayValue} |`,
            ].join("\n");
              comments += comment + "\n" + detail + "\n";
            });
            
            core.setOutput('comments', comments)

      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ${{ steps.format_lighthouse_score.outputs.comments}}
